/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TransferToken, TransferTokenInterface } from "../TransferToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddressA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddressB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_priceTokenB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountToken",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPriceTokenB",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ba238038062001ba28339818101604052810190620000379190620001e3565b620000576200004b620000e960201b60201c565b620000f160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550505050620002ab565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c68162000277565b92915050565b600081519050620001dd8162000291565b92915050565b600080600060608486031215620001f957600080fd5b60006200020986828701620001b5565b93505060206200021c86828701620001b5565b92505060406200022f86828701620001cc565b9150509250925092565b600062000246826200024d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002828162000239565b81146200028e57600080fd5b50565b6200029c816200026d565b8114620002a857600080fd5b50565b6118e780620002bb6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063045d03891461006757806347e7ef2414610083578063715018a61461009f5780638d6cc56d146100a95780638da5cb5b146100c5578063f2fde38b146100e3575b600080fd5b610081600480360381019061007c9190610f74565b6100ff565b005b61009d60048036038101906100989190610f74565b610585565b005b6100a761071f565b005b6100c360048036038101906100be9190610fd9565b6107a7565b005b6100cd61082d565b6040516100da9190611179565b60405180910390f35b6100fd60048036038101906100f89190610f4b565b610856565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561019557600080fd5b505afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd9190611002565b60ff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190611002565b60ff169050600061026460055461094e565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156103df576000600183836102cc919061153a565b6102d6919061153a565b600a6102e291906113c2565b82600a6102ef91906113c2565b6005546102fc919061133e565b856012610309919061153a565b600a61031591906113c2565b8961032091906114e0565b61032a919061133e565b610334919061133e565b9050600061034182610a5d565b905060045481111561035257600080fd5b61037f33308a8a73ffffffffffffffffffffffffffffffffffffffff16610a9f909392919063ffffffff16565b876003600082825461039191906112e8565b925050819055506103c333828873ffffffffffffffffffffffffffffffffffffffff16610b289092919063ffffffff16565b80600460008282546103d5919061153a565b9250508190555050505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561057c5760006001846012610446919061153a565b610450919061153a565b600a61045c91906113c2565b826012610469919061153a565b600a61047591906113c2565b61047f91906114e0565b82600a61048c91906113c2565b600554610499919061133e565b8460126104a6919061153a565b600a6104b291906113c2565b896104bd91906114e0565b6104c791906114e0565b6104d1919061133e565b905060006104de82610a5d565b90506003548111156104ef57600080fd5b61051c33308a8973ffffffffffffffffffffffffffffffffffffffff16610a9f909392919063ffffffff16565b876004600082825461052e91906112e8565b9250508190555061056033828973ffffffffffffffffffffffffffffffffffffffff16610b289092919063ffffffff16565b8060036000828254610572919061153a565b9250508190555050505b50505050505050565b61058d610bae565b73ffffffffffffffffffffffffffffffffffffffff166105ab61082d565b73ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890611256565b60405180910390fd5b600082905061063a61061161082d565b30848473ffffffffffffffffffffffffffffffffffffffff16610a9f909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106aa5781600360008282546106a291906112e8565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561071a57816004600082825461071291906112e8565b925050819055505b505050565b610727610bae565b73ffffffffffffffffffffffffffffffffffffffff1661074561082d565b73ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611256565b60405180910390fd5b6107a56000610bb6565b565b6107af610bae565b73ffffffffffffffffffffffffffffffffffffffff166107cd61082d565b73ffffffffffffffffffffffffffffffffffffffff1614610823576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081a90611256565b60405180910390fd5b8060058190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61085e610bae565b73ffffffffffffffffffffffffffffffffffffffff1661087c61082d565b73ffffffffffffffffffffffffffffffffffffffff16146108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611256565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990611216565b60405180910390fd5b61094b81610bb6565b50565b600080601390505b60008111156109d957600a8361096c9190611669565b600660018361097b919061153a565b601381106109b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0181905550600a836109c4919061133e565b925080806109d1906115f6565b915050610956565b50600080601290505b600060068260138110610a1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0154148015610a2d5750600081115b15610a53578180610a3d90611620565b9250508080610a4b906115f6565b9150506109e2565b8192505050919050565b600080600a83610a6d9190611669565b9050600a83610a7c919061133e565b925060058110610a9657600183610a9391906112e8565b92505b82915050919050565b610b22846323b872dd60e01b858585604051602401610ac093929190611194565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c7a565b50505050565b610ba98363a9059cbb60e01b8484604051602401610b479291906111cb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c7a565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610cdc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d419092919063ffffffff16565b9050600081511115610d3c5780806020019051810190610cfc9190610fb0565b610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3290611296565b60405180910390fd5b5b505050565b6060610d508484600085610d59565b90509392505050565b606082471015610d9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9590611236565b60405180910390fd5b610da785610e6d565b610de6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddd90611276565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e0f9190611162565b60006040518083038185875af1925050503d8060008114610e4c576040519150601f19603f3d011682016040523d82523d6000602084013e610e51565b606091505b5091509150610e61828286610e90565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610ea057829050610ef0565b600083511115610eb35782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee791906111f4565b60405180910390fd5b9392505050565b600081359050610f0681611855565b92915050565b600081519050610f1b8161186c565b92915050565b600081359050610f3081611883565b92915050565b600081519050610f458161189a565b92915050565b600060208284031215610f5d57600080fd5b6000610f6b84828501610ef7565b91505092915050565b60008060408385031215610f8757600080fd5b6000610f9585828601610ef7565b9250506020610fa685828601610f21565b9150509250929050565b600060208284031215610fc257600080fd5b6000610fd084828501610f0c565b91505092915050565b600060208284031215610feb57600080fd5b6000610ff984828501610f21565b91505092915050565b60006020828403121561101457600080fd5b600061102284828501610f36565b91505092915050565b6110348161156e565b82525050565b6000611045826112b6565b61104f81856112cc565b935061105f8185602086016115c3565b80840191505092915050565b6000611076826112c1565b61108081856112d7565b93506110908185602086016115c3565b611099816116f8565b840191505092915050565b60006110b16026836112d7565b91506110bc82611716565b604082019050919050565b60006110d46026836112d7565b91506110df82611765565b604082019050919050565b60006110f76020836112d7565b9150611102826117b4565b602082019050919050565b600061111a601d836112d7565b9150611125826117dd565b602082019050919050565b600061113d602a836112d7565b915061114882611806565b604082019050919050565b61115c816115ac565b82525050565b600061116e828461103a565b915081905092915050565b600060208201905061118e600083018461102b565b92915050565b60006060820190506111a9600083018661102b565b6111b6602083018561102b565b6111c36040830184611153565b949350505050565b60006040820190506111e0600083018561102b565b6111ed6020830184611153565b9392505050565b6000602082019050818103600083015261120e818461106b565b905092915050565b6000602082019050818103600083015261122f816110a4565b9050919050565b6000602082019050818103600083015261124f816110c7565b9050919050565b6000602082019050818103600083015261126f816110ea565b9050919050565b6000602082019050818103600083015261128f8161110d565b9050919050565b600060208201905081810360008301526112af81611130565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006112f3826115ac565b91506112fe836115ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113335761133261169a565b5b828201905092915050565b6000611349826115ac565b9150611354836115ac565b925082611364576113636116c9565b5b828204905092915050565b6000808291508390505b60018511156113b9578086048111156113955761139461169a565b5b60018516156113a45780820291505b80810290506113b285611709565b9450611379565b94509492505050565b60006113cd826115ac565b91506113d8836115ac565b92506114057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461140d565b905092915050565b60008261141d57600190506114d9565b8161142b57600090506114d9565b8160018114611441576002811461144b5761147a565b60019150506114d9565b60ff84111561145d5761145c61169a565b5b8360020a9150848211156114745761147361169a565b5b506114d9565b5060208310610133831016604e8410600b84101617156114af5782820a9050838111156114aa576114a961169a565b5b6114d9565b6114bc848484600161136f565b925090508184048111156114d3576114d261169a565b5b81810290505b9392505050565b60006114eb826115ac565b91506114f6836115ac565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561152f5761152e61169a565b5b828202905092915050565b6000611545826115ac565b9150611550836115ac565b9250828210156115635761156261169a565b5b828203905092915050565b60006115798261158c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156115e15780820151818401526020810190506115c6565b838111156115f0576000848401525b50505050565b6000611601826115ac565b915060008214156116155761161461169a565b5b600182039050919050565b600061162b826115ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561165e5761165d61169a565b5b600182019050919050565b6000611674826115ac565b915061167f836115ac565b92508261168f5761168e6116c9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61185e8161156e565b811461186957600080fd5b50565b61187581611580565b811461188057600080fd5b50565b61188c816115ac565b811461189757600080fd5b50565b6118a3816115b6565b81146118ae57600080fd5b5056fea2646970667358221220da909a0c39ef2be623065fc88cda9ab917af3b225b8d5ba10017569d2bc89e6964736f6c63430008010033";

type TransferTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferToken__factory extends ContractFactory {
  constructor(...args: TransferTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TransferToken";
  }

  deploy(
    _tokenAddressA: string,
    _tokenAddressB: string,
    _priceTokenB: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransferToken> {
    return super.deploy(
      _tokenAddressA,
      _tokenAddressB,
      _priceTokenB,
      overrides || {}
    ) as Promise<TransferToken>;
  }
  getDeployTransaction(
    _tokenAddressA: string,
    _tokenAddressB: string,
    _priceTokenB: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddressA,
      _tokenAddressB,
      _priceTokenB,
      overrides || {}
    );
  }
  attach(address: string): TransferToken {
    return super.attach(address) as TransferToken;
  }
  connect(signer: Signer): TransferToken__factory {
    return super.connect(signer) as TransferToken__factory;
  }
  static readonly contractName: "TransferToken";
  public readonly contractName: "TransferToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferTokenInterface {
    return new utils.Interface(_abi) as TransferTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferToken {
    return new Contract(address, _abi, signerOrProvider) as TransferToken;
  }
}
