/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TransferToken, TransferTokenInterface } from "../TransferToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddressA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddressB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_priceTokenB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountToken",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPriceTokenB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimalsPrice",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019f3380380620019f38339818101604052810190620000379190620001eb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055506002600681905550505050620002b3565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001ce816200027f565b92915050565b600081519050620001e58162000299565b92915050565b6000806000606084860312156200020157600080fd5b60006200021186828701620001bd565b93505060206200022486828701620001bd565b92505060406200023786828701620001d4565b9150509250925092565b60006200024e8262000255565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200028a8162000241565b81146200029657600080fd5b50565b620002a48162000275565b8114620002b057600080fd5b50565b61173080620002c36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063045d03891461006757806347e7ef2414610083578063715018a61461009f57806382367b2d146100a95780638da5cb5b146100c5578063f2fde38b146100e3575b600080fd5b610081600480360381019061007c9190610e03565b6100ff565b005b61009d60048036038101906100989190610e03565b6104c3565b005b6100a76106f7565b005b6100c360048036038101906100be9190610e68565b61077f565b005b6100cd61080d565b6040516100da919061101b565b60405180910390f35b6100fd60048036038101906100f89190610dda565b610836565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561019557600080fd5b505afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd9190610ea4565b60ff16905060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190610ea4565b60ff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561038957600060055483836006546102c1919061118a565b6102cb9190611427565b600a6102d79190611264565b876102e291906113cd565b6102ec91906111e0565b90506004548111156102fd57600080fd5b61032a3330888873ffffffffffffffffffffffffffffffffffffffff1661092e909392919063ffffffff16565b856003600082825461033c919061118a565b9250508190555061036e33828673ffffffffffffffffffffffffffffffffffffffff166109b79092919063ffffffff16565b80600460008282546103809190611427565b92505081905550505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156104bb57600060055482846006546103f3919061118a565b6103fd9190611427565b600a6104099190611264565b8761041491906113cd565b61041e91906113cd565b905060035481111561042f57600080fd5b61045c3330888773ffffffffffffffffffffffffffffffffffffffff1661092e909392919063ffffffff16565b856004600082825461046e919061118a565b925050819055506104a033828773ffffffffffffffffffffffffffffffffffffffff166109b79092919063ffffffff16565b80600360008282546104b29190611427565b92505081905550505b505050505050565b6104cb610a3d565b73ffffffffffffffffffffffffffffffffffffffff166104e961080d565b73ffffffffffffffffffffffffffffffffffffffff161461053f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610536906110f8565b60405180910390fd5b600082905060008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c49190610ea4565b600a6105d091906112af565b836105db91906113cd565b90506106116105e861080d565b30838573ffffffffffffffffffffffffffffffffffffffff1661092e909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610681578060036000828254610679919061118a565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156106f15780600460008282546106e9919061118a565b925050819055505b50505050565b6106ff610a3d565b73ffffffffffffffffffffffffffffffffffffffff1661071d61080d565b73ffffffffffffffffffffffffffffffffffffffff1614610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a906110f8565b60405180910390fd5b61077d6000610a45565b565b610787610a3d565b73ffffffffffffffffffffffffffffffffffffffff166107a561080d565b73ffffffffffffffffffffffffffffffffffffffff16146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906110f8565b60405180910390fd5b81600581905550806006819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61083e610a3d565b73ffffffffffffffffffffffffffffffffffffffff1661085c61080d565b73ffffffffffffffffffffffffffffffffffffffff16146108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a9906110f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906110b8565b60405180910390fd5b61092b81610a45565b50565b6109b1846323b872dd60e01b85858560405160240161094f93929190611036565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b09565b50505050565b610a388363a9059cbb60e01b84846040516024016109d692919061106d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b09565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610b6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610bd09092919063ffffffff16565b9050600081511115610bcb5780806020019051810190610b8b9190610e3f565b610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190611138565b60405180910390fd5b5b505050565b6060610bdf8484600085610be8565b90509392505050565b606082471015610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c24906110d8565b60405180910390fd5b610c3685610cfc565b610c75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6c90611118565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610c9e9190611004565b60006040518083038185875af1925050503d8060008114610cdb576040519150601f19603f3d011682016040523d82523d6000602084013e610ce0565b606091505b5091509150610cf0828286610d1f565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610d2f57829050610d7f565b600083511115610d425782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d769190611096565b60405180910390fd5b9392505050565b600081359050610d958161169e565b92915050565b600081519050610daa816116b5565b92915050565b600081359050610dbf816116cc565b92915050565b600081519050610dd4816116e3565b92915050565b600060208284031215610dec57600080fd5b6000610dfa84828501610d86565b91505092915050565b60008060408385031215610e1657600080fd5b6000610e2485828601610d86565b9250506020610e3585828601610db0565b9150509250929050565b600060208284031215610e5157600080fd5b6000610e5f84828501610d9b565b91505092915050565b60008060408385031215610e7b57600080fd5b6000610e8985828601610db0565b9250506020610e9a85828601610db0565b9150509250929050565b600060208284031215610eb657600080fd5b6000610ec484828501610dc5565b91505092915050565b610ed68161145b565b82525050565b6000610ee782611158565b610ef1818561116e565b9350610f018185602086016114b0565b80840191505092915050565b6000610f1882611163565b610f228185611179565b9350610f328185602086016114b0565b610f3b81611541565b840191505092915050565b6000610f53602683611179565b9150610f5e8261155f565b604082019050919050565b6000610f76602683611179565b9150610f81826115ae565b604082019050919050565b6000610f99602083611179565b9150610fa4826115fd565b602082019050919050565b6000610fbc601d83611179565b9150610fc782611626565b602082019050919050565b6000610fdf602a83611179565b9150610fea8261164f565b604082019050919050565b610ffe81611499565b82525050565b60006110108284610edc565b915081905092915050565b60006020820190506110306000830184610ecd565b92915050565b600060608201905061104b6000830186610ecd565b6110586020830185610ecd565b6110656040830184610ff5565b949350505050565b60006040820190506110826000830185610ecd565b61108f6020830184610ff5565b9392505050565b600060208201905081810360008301526110b08184610f0d565b905092915050565b600060208201905081810360008301526110d181610f46565b9050919050565b600060208201905081810360008301526110f181610f69565b9050919050565b6000602082019050818103600083015261111181610f8c565b9050919050565b6000602082019050818103600083015261113181610faf565b9050919050565b6000602082019050818103600083015261115181610fd2565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061119582611499565b91506111a083611499565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d5576111d46114e3565b5b828201905092915050565b60006111eb82611499565b91506111f683611499565b92508261120657611205611512565b5b828204905092915050565b6000808291508390505b600185111561125b57808604811115611237576112366114e3565b5b60018516156112465780820291505b808102905061125485611552565b945061121b565b94509492505050565b600061126f82611499565b915061127a83611499565b92506112a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846112fa565b905092915050565b60006112ba82611499565b91506112c5836114a3565b92506112f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846112fa565b905092915050565b60008261130a57600190506113c6565b8161131857600090506113c6565b816001811461132e576002811461133857611367565b60019150506113c6565b60ff84111561134a576113496114e3565b5b8360020a915084821115611361576113606114e3565b5b506113c6565b5060208310610133831016604e8410600b841016171561139c5782820a905083811115611397576113966114e3565b5b6113c6565b6113a98484846001611211565b925090508184048111156113c0576113bf6114e3565b5b81810290505b9392505050565b60006113d882611499565b91506113e383611499565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561141c5761141b6114e3565b5b828202905092915050565b600061143282611499565b915061143d83611499565b9250828210156114505761144f6114e3565b5b828203905092915050565b600061146682611479565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114ce5780820151818401526020810190506114b3565b838111156114dd576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6116a78161145b565b81146116b257600080fd5b50565b6116be8161146d565b81146116c957600080fd5b50565b6116d581611499565b81146116e057600080fd5b50565b6116ec816114a3565b81146116f757600080fd5b5056fea2646970667358221220cc3e3fd01cfa33df1c32532bb0adc25d9738276c082a3b5dcf0d6eb568b285ef64736f6c63430008010033";

type TransferTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferToken__factory extends ContractFactory {
  constructor(...args: TransferTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TransferToken";
  }

  deploy(
    _tokenAddressA: string,
    _tokenAddressB: string,
    _priceTokenB: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransferToken> {
    return super.deploy(
      _tokenAddressA,
      _tokenAddressB,
      _priceTokenB,
      overrides || {}
    ) as Promise<TransferToken>;
  }
  getDeployTransaction(
    _tokenAddressA: string,
    _tokenAddressB: string,
    _priceTokenB: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddressA,
      _tokenAddressB,
      _priceTokenB,
      overrides || {}
    );
  }
  attach(address: string): TransferToken {
    return super.attach(address) as TransferToken;
  }
  connect(signer: Signer): TransferToken__factory {
    return super.connect(signer) as TransferToken__factory;
  }
  static readonly contractName: "TransferToken";
  public readonly contractName: "TransferToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferTokenInterface {
    return new utils.Interface(_abi) as TransferTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferToken {
    return new Contract(address, _abi, signerOrProvider) as TransferToken;
  }
}
