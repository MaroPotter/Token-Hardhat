/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9438038062001e9483398181016040528101906200003791906200037c565b828281600390805190602001906200005192919062000243565b5080600490805190602001906200006a92919062000243565b50505080600560006101000a81548160ff021916908360ff160217905550620000b73382600a6200009c9190620005a3565b6103e8620000ab9190620006e0565b620000c060201b60201c565b505050620008e8565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000133576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012a906200043c565b60405180910390fd5b62000147600083836200023960201b60201c565b80600260008282546200015b9190620004eb565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001b29190620004eb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021991906200045e565b60405180910390a362000235600083836200023e60201b60201c565b5050565b505050565b505050565b82805462000251906200078e565b90600052602060002090601f016020900481019282620002755760008555620002c1565b82601f106200029057805160ff1916838001178555620002c1565b82800160010185558215620002c1579182015b82811115620002c0578251825591602001919060010190620002a3565b5b509050620002d09190620002d4565b5090565b5b80821115620002ef576000816000905550600101620002d5565b5090565b60006200030a6200030484620004a4565b6200047b565b9050828152602081018484840111156200032357600080fd5b6200033084828562000758565b509392505050565b600082601f8301126200034a57600080fd5b81516200035c848260208601620002f3565b91505092915050565b6000815190506200037681620008ce565b92915050565b6000806000606084860312156200039257600080fd5b600084015167ffffffffffffffff811115620003ad57600080fd5b620003bb8682870162000338565b935050602084015167ffffffffffffffff811115620003d957600080fd5b620003e78682870162000338565b9250506040620003fa8682870162000365565b9150509250925092565b600062000413601f83620004da565b91506200042082620008a5565b602082019050919050565b620004368162000741565b82525050565b60006020820190508181036000830152620004578162000404565b9050919050565b60006020820190506200047560008301846200042b565b92915050565b6000620004876200049a565b9050620004958282620007c4565b919050565b6000604051905090565b600067ffffffffffffffff821115620004c257620004c162000858565b5b620004cd8262000887565b9050602081019050919050565b600082825260208201905092915050565b6000620004f88262000741565b9150620005058362000741565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200053d576200053c620007fa565b5b828201905092915050565b6000808291508390505b60018511156200059a57808604811115620005725762000571620007fa565b5b6001851615620005825780820291505b8081029050620005928562000898565b945062000552565b94509492505050565b6000620005b08262000741565b9150620005bd836200074b565b9250620005ec7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005f4565b905092915050565b600082620006065760019050620006d9565b81620006165760009050620006d9565b81600181146200062f57600281146200063a5762000670565b6001915050620006d9565b60ff8411156200064f576200064e620007fa565b5b8360020a915084821115620006695762000668620007fa565b5b50620006d9565b5060208310610133831016604e8410600b8410161715620006aa5782820a905083811115620006a457620006a3620007fa565b5b620006d9565b620006b9848484600162000548565b92509050818404811115620006d357620006d2620007fa565b5b81810290505b9392505050565b6000620006ed8262000741565b9150620006fa8362000741565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007365762000735620007fa565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b60005b83811015620007785780820151818401526020810190506200075b565b8381111562000788576000848401525b50505050565b60006002820490506001821680620007a757607f821691505b60208210811415620007be57620007bd62000829565b5b50919050565b620007cf8262000887565b810181811067ffffffffffffffff82111715620007f157620007f062000858565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620008d9816200074b565b8114620008e557600080fd5b50565b61159c80620008f86000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780637b7d7225146101d357806395d89b4114610203578063a457c2d714610221578063a9059cbb14610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c16102b1565b6040516100ce9190610e8a565b60405180910390f35b6100f160048036038101906100ec9190610cd8565b610343565b6040516100fe9190610e6f565b60405180910390f35b61010f610366565b60405161011c9190610f8c565b60405180910390f35b61013f600480360381019061013a9190610c89565b610370565b60405161014c9190610e6f565b60405180910390f35b61015d61039f565b60405161016a9190610fa7565b60405180910390f35b61018d60048036038101906101889190610cd8565b6103b6565b60405161019a9190610e6f565b60405180910390f35b6101bd60048036038101906101b89190610c24565b610460565b6040516101ca9190610f8c565b60405180910390f35b6101ed60048036038101906101e89190610cd8565b6104a8565b6040516101fa9190610e6f565b60405180910390f35b61020b6104ea565b6040516102189190610e8a565b60405180910390f35b61023b60048036038101906102369190610cd8565b61057c565b6040516102489190610e6f565b60405180910390f35b61026b60048036038101906102669190610cd8565b610666565b6040516102789190610e6f565b60405180910390f35b61029b60048036038101906102969190610c4d565b610689565b6040516102a89190610f8c565b60405180910390f35b6060600380546102c090611287565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec90611287565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b5050505050905090565b60008061034e610710565b905061035b818585610718565b600191505092915050565b6000600254905090565b60008061037b610710565b90506103888582856108e3565b61039385858561096f565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b6000806103c1610710565b9050610455818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104509190610fde565b610718565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600560009054906101000a900460ff16600a6104c79190611087565b836104d291906111a5565b90506104de8482610343565b50600191505092915050565b6060600480546104f990611287565b80601f016020809104026020016040519081016040528092919081815260200182805461052590611287565b80156105725780601f1061054757610100808354040283529160200191610572565b820191906000526020600020905b81548152906001019060200180831161055557829003601f168201915b5050505050905090565b600080610587610710565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490610f6c565b60405180910390fd5b61065a8286868403610718565b60019250505092915050565b600080610671610710565b905061067e81858561096f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90610f4c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90610ecc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108d69190610f8c565b60405180910390a3505050565b60006108ef8484610689565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610969578181101561095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290610eec565b60405180910390fd5b6109688484848403610718565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690610f2c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4690610eac565b60405180910390fd5b610a5a838383610bf0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad790610f0c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b739190610fde565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd79190610f8c565b60405180910390a3610bea848484610bf5565b50505050565b505050565b505050565b600081359050610c0981611538565b92915050565b600081359050610c1e8161154f565b92915050565b600060208284031215610c3657600080fd5b6000610c4484828501610bfa565b91505092915050565b60008060408385031215610c6057600080fd5b6000610c6e85828601610bfa565b9250506020610c7f85828601610bfa565b9150509250929050565b600080600060608486031215610c9e57600080fd5b6000610cac86828701610bfa565b9350506020610cbd86828701610bfa565b9250506040610cce86828701610c0f565b9150509250925092565b60008060408385031215610ceb57600080fd5b6000610cf985828601610bfa565b9250506020610d0a85828601610c0f565b9150509250929050565b610d1d81611211565b82525050565b6000610d2e82610fc2565b610d388185610fcd565b9350610d48818560208601611254565b610d5181611317565b840191505092915050565b6000610d69602383610fcd565b9150610d7482611335565b604082019050919050565b6000610d8c602283610fcd565b9150610d9782611384565b604082019050919050565b6000610daf601d83610fcd565b9150610dba826113d3565b602082019050919050565b6000610dd2602683610fcd565b9150610ddd826113fc565b604082019050919050565b6000610df5602583610fcd565b9150610e008261144b565b604082019050919050565b6000610e18602483610fcd565b9150610e238261149a565b604082019050919050565b6000610e3b602583610fcd565b9150610e46826114e9565b604082019050919050565b610e5a8161123d565b82525050565b610e6981611247565b82525050565b6000602082019050610e846000830184610d14565b92915050565b60006020820190508181036000830152610ea48184610d23565b905092915050565b60006020820190508181036000830152610ec581610d5c565b9050919050565b60006020820190508181036000830152610ee581610d7f565b9050919050565b60006020820190508181036000830152610f0581610da2565b9050919050565b60006020820190508181036000830152610f2581610dc5565b9050919050565b60006020820190508181036000830152610f4581610de8565b9050919050565b60006020820190508181036000830152610f6581610e0b565b9050919050565b60006020820190508181036000830152610f8581610e2e565b9050919050565b6000602082019050610fa16000830184610e51565b92915050565b6000602082019050610fbc6000830184610e60565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fe98261123d565b9150610ff48361123d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611029576110286112b9565b5b828201905092915050565b6000808291508390505b600185111561107e5780860481111561105a576110596112b9565b5b60018516156110695780820291505b808102905061107785611328565b945061103e565b94509492505050565b60006110928261123d565b915061109d83611247565b92506110ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110d2565b905092915050565b6000826110e2576001905061119e565b816110f0576000905061119e565b816001811461110657600281146111105761113f565b600191505061119e565b60ff841115611122576111216112b9565b5b8360020a915084821115611139576111386112b9565b5b5061119e565b5060208310610133831016604e8410600b84101617156111745782820a90508381111561116f5761116e6112b9565b5b61119e565b6111818484846001611034565b92509050818404811115611198576111976112b9565b5b81810290505b9392505050565b60006111b08261123d565b91506111bb8361123d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111f4576111f36112b9565b5b828202905092915050565b600061120a8261121d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611272578082015181840152602081019050611257565b83811115611281576000848401525b50505050565b6000600282049050600182168061129f57607f821691505b602082108114156112b3576112b26112e8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b611541816111ff565b811461154c57600080fd5b50565b6115588161123d565b811461156357600080fd5b5056fea2646970667358221220c358c1313043ef1adaebe8f8997b4977570cd46e4f4999d2feeeb0fc314e914e64736f6c63430008010033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token";
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly contractName: "Token";
  public readonly contractName: "Token";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
